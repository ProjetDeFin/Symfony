security:
    password_hashers:
        App\Entity\User:
            algorithm: auto

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    role_hierarchy:
        ROLE_USER:        []
        ROLE_SUPER_ADMIN: [ ROLE_COMPANY_RESPONSIBLE, ROLE_STUDENT, ROLE_ALLOWED_TO_SWITCH ]
        ROLE_STUDENT: [ ROLE_USER ]
        ROLE_COMPANY_RESPONSIBLE: [ ROLE_USER ]

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern:  ^/api/login
            stateless: true
            json_login:
                check_path: /api/login
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern:   ^/api
            stateless: true
            provider: users
            jwt: ~

        main:
            form_login:
                login_path: /login
                check_path: /login
                default_target_path: /admin
            logout:
                path: /logout
                target: /

    access_control:
        - { path: ^/admin, roles: ROLE_SUPER_ADMIN }
        - { path: ^/api/account, roles: ROLE_USER }
